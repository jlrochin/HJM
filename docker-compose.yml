version: "3.9"

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - --api.dashboard=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net

  home:
    build:
      context: ./home
      dockerfile: Dockerfile
    container_name: home
    environment:
      NODE_ENV: production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.home.rule=PathPrefix(`/`)"
      - "traefik.http.routers.home.entrypoints=web"
      - "traefik.http.services.home.loadbalancer.server.port=3000"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net

  postgres-cagpu:
    image: postgres:16-alpine
    container_name: postgres-cagpu
    env_file:
      - ./cagpu-db.env
    volumes:
      - pgdata_cagpu:/var/lib/postgresql/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - backend_net

  postgres-mau:
    image: postgres:16-alpine
    container_name: postgres-mau
    env_file:
      - ./mau-db.env
    volumes:
      - pgdata_mau:/var/lib/postgresql/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - backend_net

  cagpu-frontend:
    build:
      context: ./cagpu
      dockerfile: Dockerfile.frontend
    container_name: cagpu-frontend
    env_file:
      - ./cagpu.env
    environment:
      NODE_ENV: production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cagpu-frontend.rule=PathPrefix(`/cagpu`) && !PathPrefix(`/cagpu/api`)"
      - "traefik.http.routers.cagpu-frontend.entrypoints=web"
      - "traefik.http.services.cagpu-frontend.loadbalancer.server.port=3000"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net

  cagpu-backend:
    build:
      context: ./cagpu
      dockerfile: Dockerfile.backend
    container_name: cagpu-backend
    depends_on:
      - postgres-cagpu
    env_file:
      - ./cagpu.env
    environment:
      NODE_ENV: production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cagpu-backend.rule=PathPrefix(`/cagpu`) && PathPrefix(`/cagpu/api`)"
      - "traefik.http.routers.cagpu-backend.entrypoints=web"
      - "traefik.http.services.cagpu-backend.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.cagpu-api-strip.stripprefix.prefixes=/cagpu"
      - "traefik.http.routers.cagpu-backend.middlewares=cagpu-api-strip"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net
      - backend_net

  mau-frontend:
    build:
      context: ./MAU
      dockerfile: Dockerfile.frontend
    container_name: mau-frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mau-frontend.rule=PathPrefix(`/mau`) && !PathPrefix(`/mau/api`)"
      - "traefik.http.routers.mau-frontend.entrypoints=web"
      - "traefik.http.services.mau-frontend.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net

  mau-backend:
    build:
      context: ./MAU
      dockerfile: Dockerfile.backend
    container_name: mau-backend
    depends_on:
      - postgres-mau
    env_file:
      - ./mau.env
    environment:
      DJANGO_SETTINGS_MODULE: mau_hospital.settings
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mau-backend.rule=PathPrefix(`/mau/api`)"
      - "traefik.http.routers.mau-backend.entrypoints=web"
      - "traefik.http.services.mau-backend.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.mau-api-strip.stripprefix.prefixes=/mau/api"
      - "traefik.http.routers.mau-backend.middlewares=mau-api-strip"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net
      - backend_net

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    command: --interval 300 --cleanup --label-enable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  pgdata_cagpu:
  pgdata_mau:

networks:
  frontend_net:
    driver: bridge
  backend_net:
    driver: bridge


