version: "3.9"

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - --api.dashboard=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      # RedirecciÃ³n global de /api/* -> /cagpu/api/* para compatibilidad con clientes antiguos
      - "traefik.http.middlewares.redirect-cagpu-api.redirectregex.regex=^/api/(.*)"
      - "traefik.http.middlewares.redirect-cagpu-api.redirectregex.replacement=/cagpu/api/$1"
      - "traefik.http.routers.api-redirect.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api-redirect.entrypoints=web"
      - "traefik.http.routers.api-redirect.priority=100"
      - "traefik.http.routers.api-redirect.middlewares=redirect-cagpu-api"
      - "traefik.http.routers.api-redirect.service=noop@internal"
    networks:
      - frontend_net
      - backend_net

  home:
    image: ghcr.io/jlrochin/home:latest
    container_name: home
    environment:
      NODE_ENV: production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.home.rule=PathPrefix(`/`) && !PathPrefix(`/cagpu`) && !PathPrefix(`/mau`)"
      - "traefik.http.routers.home.entrypoints=web"
      - "traefik.http.routers.home.priority=1"
      - "traefik.http.services.home.loadbalancer.server.port=3000"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net

  postgres-cagpu:
    image: postgres:16-alpine
    container_name: postgres-cagpu
    env_file:
      - ./cagpu-db.env
    volumes:
      - pgdata_cagpu:/var/lib/postgresql/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - backend_net

  postgres-mau:
    image: postgres:16-alpine
    container_name: postgres-mau
    env_file:
      - ./mau-db.env
    volumes:
      - pgdata_mau:/var/lib/postgresql/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - backend_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 12

  cagpu-frontend:
    image: ghcr.io/jlrochin/cagpu-frontend:latest
    container_name: cagpu-frontend
    env_file:
      - ./cagpu.env
    environment:
      NODE_ENV: production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cagpu-frontend.rule=PathPrefix(`/cagpu`) && !PathPrefix(`/cagpu/api`)"
      - "traefik.http.routers.cagpu-frontend.entrypoints=web"
      - "traefik.http.routers.cagpu-frontend.priority=10"
      - "traefik.http.middlewares.cagpu-frontend-headers.headers.customresponseheaders.X-Service=cagpu-frontend"
      - "traefik.http.routers.cagpu-frontend.middlewares=cagpu-frontend-headers"
      - "traefik.http.services.cagpu-frontend.loadbalancer.server.port=3000"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net

  cagpu-backend:
    image: ghcr.io/jlrochin/cagpu-backend:latest
    container_name: cagpu-backend
    depends_on:
      - postgres-cagpu
    env_file:
      - ./cagpu.env
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
    command: sh -c "npx prisma migrate deploy && npm run start -- -H 0.0.0.0 -p 3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cagpu-backend.rule=PathPrefix(`/cagpu/api`)"
      - "traefik.http.routers.cagpu-backend.entrypoints=web"
      - "traefik.http.routers.cagpu-backend.priority=20"
      - "traefik.http.services.cagpu-backend.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.cagpu-api-strip.stripprefix.prefixes=/cagpu"
      - "traefik.http.middlewares.cagpu-backend-headers.headers.customresponseheaders.X-Service=cagpu-backend"
      - "traefik.http.routers.cagpu-backend.middlewares=cagpu-api-strip,cagpu-backend-headers"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net
      - backend_net

  mau-frontend:
    image: ghcr.io/jlrochin/mau-frontend:latest
    container_name: mau-frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mau-frontend.rule=PathPrefix(`/mau`) && !PathPrefix(`/mau/api`)"
      - "traefik.http.routers.mau-frontend.entrypoints=web"
      - "traefik.http.routers.mau-frontend.priority=10"
      - "traefik.http.services.mau-frontend.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net

  mau-backend:
    image: ghcr.io/jlrochin/mau-backend:latest
    container_name: mau-backend
    depends_on:
      postgres-mau:
        condition: service_healthy
    env_file:
      - ./mau.env
    environment:
      DJANGO_SETTINGS_MODULE: mau_hospital.settings
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mau-backend.rule=PathPrefix(`/mau/api`)"
      - "traefik.http.routers.mau-backend.entrypoints=web"
      - "traefik.http.routers.mau-backend.priority=20"
      - "traefik.http.services.mau-backend.loadbalancer.server.port=3000"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - frontend_net
      - backend_net

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/jlru/.docker/config.json:/config.json:ro
    environment:
      - WATCHTOWER_POLL_INTERVAL=60
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
    command: --interval 60 --cleanup --label-enable
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  pgdata_cagpu:
  pgdata_mau:

networks:
  frontend_net:
    driver: bridge
  backend_net:
    driver: bridge
